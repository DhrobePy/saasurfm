<?php
require_once '../core/init.php';

// --- SECURITY ---
$allowed_roles = [
    'Superadmin', 
    'admin',
    'Accounts',
];
restrict_access($allowed_roles);

// Get the $db instance
global $db; 
$pageTitle = 'Manage Bank Account';

// --- VARIABLE INITIALIZATION ---
$edit_mode = false;
$account_to_edit = null;
$form_action = 'add_account';
$error = null;
$obe_id = null; // Opening Balance Equity Account ID

// --- PRE-REQUISITE: Find "Opening Balance Equity" account ---
try {
    // Search by name and account_type (not account_type_group which doesn't exist in INSERT)
    $obe_account = $db->query(
        "SELECT id FROM chart_of_accounts 
         WHERE name = 'Opening Balance Equity' 
         AND account_type = 'Owner Equity'"
    )->first();
    
    if (!$obe_account) {
        // If it doesn't exist, create it. This is a vital one-time setup.
        $obe_id = $db->insert('chart_of_accounts', [
            'name' => 'Opening Balance Equity',
            'description' => 'System account for recording initial balances.',
            'account_type' => 'Owner Equity',
            'account_type_group' => 'Equity',
            'normal_balance' => 'Credit',
            'status' => 'active',
            'is_active' => 1
        ]);
        if (!$obe_id) {
            throw new Exception("Could not create required system account 'Opening Balance Equity'.");
        }
    } else {
        $obe_id = $obe_account->id;
    }
} catch (Exception $e) {
    error_log("Opening Balance Equity Error: " . $e->getMessage());
    $error = "Critical Error: Unable to initialize system accounts.";
}


// --- LOGIC: HANDLE POST REQUESTS (ADD & UPDATE) ---
if ($_SERVER['REQUEST_METHOD'] === 'POST' && !$error) {
    // Get PDO instance from our Database class
    $pdo = $db->getPdo();

    try {
        // Start a database transaction
        $pdo->beginTransaction();

        // --- ADD NEW BANK ACCOUNT ---
        if (isset($_POST['add_account'])) {
            $account_name = trim($_POST['account_name']);
            $account_number = trim($_POST['account_number']);
            $initial_balance = (float)$_POST['initial_balance'];
            $bank_name = trim($_POST['bank_name']);
            $branch_name = trim($_POST['branch_name']);
            $address = trim($_POST['address']);
            $account_type = $_POST['account_type'];
            
            // --- Step 1: Create the Chart of Accounts Entry ---
            // Format: "Bank Name - Account Name (Account Number)"
            $coa_name = $bank_name . ' - ' . $account_name . ' (' . $account_number . ')';
            
            // Check if it already exists to prevent duplicates
            $coa_entry = $db->query(
                "SELECT id FROM chart_of_accounts WHERE account_number = ?", 
                [$account_number]
            )->first();
            
            $coa_id = null;

            if (!$coa_entry) {
                // Create new Chart of Accounts entry
                // SCHEMA FIX: Use 'Bank' (not 'Bank Account'), 'Debit' (capitalized)
                $coa_id = $db->insert('chart_of_accounts', [
                    'name' => $coa_name,
                    'account_number' => $account_number, // Store account number here too
                    'description' => 'Bank Account: ' . $bank_name . ' - ' . $branch_name,
                    'account_type' => 'Bank', // Must match ENUM: 'Bank'
                    'account_type_group' => 'Asset',
                    'normal_balance' => 'Debit', // Must match ENUM: 'Debit' (capital D)
                    'status' => 'active',
                    'is_active' => 1
                ]);
                
                if (!$coa_id) {
                    throw new Exception("Could not create Chart of Accounts entry.");
                }
            } else {
                throw new Exception("An account with this account number already exists.");
            }

            // --- Step 2: Create the Bank Account Entry ---
            // SCHEMA FIX: bank_accounts.uuid is auto-generated by DEFAULT
            // SCHEMA FIX: current_balance is auto-calculated, don't set it
            $bank_id = $db->insert('bank_accounts', [
                'chart_of_account_id' => $coa_id,
                'bank_name' => $bank_name,
                'branch_name' => $branch_name,
                'address' => $address,
                'account_name' => $account_name,
                'account_number' => $account_number,
                'account_type' => $account_type, // ENUM: Checking, Savings, Loan, Credit, Other
                'status' => 'active'
            ]);

            if (!$bank_id) {
                throw new Exception("Could not save bank account details.");
            }

            // --- Step 3: Create the Opening Balance Journal Entry ---
            // Only create journal entry if initial balance is non-zero
            if ($initial_balance != 0) {
                // SCHEMA FIX: journal_entries uses 'transaction_date' not 'date'
                // SCHEMA FIX: uuid is auto-generated
                $journal_id = $db->insert('journal_entries', [
                    'transaction_date' => date('Y-m-d'),
                    'description' => 'Opening Balance: ' . $coa_name,
                    'related_document_type' => 'BankAccount',
                    'related_document_id' => $bank_id,
                    'created_by_user_id' => $_SESSION['user_id']
                ]);
                
                if (!$journal_id) {
                    throw new Exception("Could not create journal entry for opening balance.");
                }

                // Create the balanced transaction lines (Debit/Credit)
                // SCHEMA FIX: transaction_lines uses 'journal_entry_id' not 'journal_id'
                // SCHEMA FIX: Uses 'debit_amount' and 'credit_amount' (not 'debit' and 'credit')
                
                if ($initial_balance > 0) {
                    // Positive balance: Debit Bank (increase asset), Credit OBE
                    
                    // Line 1: Debit the Bank Account
                    $db->insert('transaction_lines', [
                        'journal_entry_id' => $journal_id,
                        'account_id' => $coa_id,
                        'debit_amount' => $initial_balance,
                        'credit_amount' => 0.00,
                        'description' => 'Opening balance - Bank Account'
                    ]);
                    
                    // Line 2: Credit Opening Balance Equity
                    $db->insert('transaction_lines', [
                        'journal_entry_id' => $journal_id,
                        'account_id' => $obe_id,
                        'debit_amount' => 0.00,
                        'credit_amount' => $initial_balance,
                        'description' => 'Opening balance - Equity offset'
                    ]);
                    
                } else {
                    // Negative balance (overdraft): Credit Bank, Debit OBE
                    $abs_balance = abs($initial_balance);
                    
                    // Line 1: Credit the Bank Account
                    $db->insert('transaction_lines', [
                        'journal_entry_id' => $journal_id,
                        'account_id' => $coa_id,
                        'debit_amount' => 0.00,
                        'credit_amount' => $abs_balance,
                        'description' => 'Opening balance - Bank Account (overdraft)'
                    ]);
                    
                    // Line 2: Debit Opening Balance Equity
                    $db->insert('transaction_lines', [
                        'journal_entry_id' => $journal_id,
                        'account_id' => $obe_id,
                        'debit_amount' => $abs_balance,
                        'credit_amount' => 0.00,
                        'description' => 'Opening balance - Equity offset (overdraft)'
                    ]);
                }
            }

            // If all steps succeeded, commit the transaction
            $pdo->commit();
            $_SESSION['success_flash'] = 'Bank Account successfully created with proper accounting entries.';
            header('Location: bank_accounts.php');
            exit();
        }

        // --- UPDATE EXISTING BANK ACCOUNT ---
        if (isset($_POST['update_account'])) {
            // SCHEMA FIX: Use UUID for identification (more secure)
            $bank_uuid = $_POST['bank_uuid'];
            
            // Find the bank account by UUID
            $bank_data = $db->query(
                "SELECT id, chart_of_account_id, account_number FROM bank_accounts WHERE uuid = ?", 
                [$bank_uuid]
            )->first();
            
            if (!$bank_data) {
                throw new Exception("Bank account not found.");
            }
            
            $bank_id = $bank_data->id;
            $coa_id = $bank_data->chart_of_account_id;
            $old_account_number = $bank_data->account_number;
            $new_account_number = trim($_POST['account_number']);

            // Check if account number is being changed and if new number already exists
            if ($old_account_number !== $new_account_number) {
                $duplicate_check = $db->query(
                    "SELECT id FROM bank_accounts WHERE account_number = ? AND id != ?",
                    [$new_account_number, $bank_id]
                )->first();
                
                if ($duplicate_check) {
                    throw new Exception("Another account with this account number already exists.");
                }
            }

            // Update the bank_accounts table
            $bank_name = trim($_POST['bank_name']);
            $branch_name = trim($_POST['branch_name']);
            $account_name = trim($_POST['account_name']);
            
            $db->update('bank_accounts', $bank_id, [
                'bank_name' => $bank_name,
                'branch_name' => $branch_name,
                'address' => trim($_POST['address']),
                'account_name' => $account_name,
                'account_number' => $new_account_number,
                'account_type' => $_POST['account_type']
            ]);

            // Also update the matching Chart of Accounts entry
            if ($coa_id) {
                $coa_name = $bank_name . ' - ' . $account_name . ' (' . $new_account_number . ')';
                $db->update('chart_of_accounts', $coa_id, [
                    'name' => $coa_name,
                    'account_number' => $new_account_number,
                    'description' => 'Bank Account: ' . $bank_name . ' - ' . $branch_name
                ]);
            }
            
            // Note: We do NOT adjust the initial balance on an update.
            // That must be done via a proper journal entry adjustment.

            $pdo->commit();
            $_SESSION['success_flash'] = 'Bank Account successfully updated.';
            header('Location: bank_accounts.php');
            exit();
        }

    } catch (Exception $e) {
        // If anything went wrong, roll back the transaction
        if ($pdo->inTransaction()) {
            $pdo->rollBack();
        }
        error_log("Bank Account Management Error: " . $e->getMessage());
        error_log("Stack trace: " . $e->getTraceAsString());
        $error = "Transaction Failed: " . $e->getMessage();
    }
}


// --- LOGIC: HANDLE GET REQUEST (EDIT) ---
if (isset($_GET['edit'])) {
    // SCHEMA FIX: Use UUID instead of ID for security
    $edit_uuid = $_GET['edit'];
    $account_to_edit = $db->query(
        "SELECT * FROM bank_accounts WHERE uuid = ?", 
        [$edit_uuid]
    )->first();
    
    if ($account_to_edit) {
        $edit_mode = true;
        $form_action = 'update_account';
        $pageTitle = 'Edit Bank Account';
    } else {
        $_SESSION['error_flash'] = 'Bank account not found.';
        header('Location: bank_accounts.php');
        exit();
    }
}

// --- Include Header ---
require_once '../templates/header.php'; 
?>

<!-- ======================================== -->
<!-- 1. PAGE HEADER -->
<!-- ======================================== -->
<div class="flex justify-between items-center mb-6">
    <div>
        <h1 class="text-3xl font-bold text-gray-900"><?php echo htmlspecialchars($pageTitle); ?></h1>
        <p class="text-lg text-gray-600 mt-1">
            <?php echo $edit_mode 
                ? 'Update the details for this bank account.' 
                : 'Add a new bank account with proper double-entry accounting.'; ?>
        </p>
    </div>
    <a href="bank_accounts.php" 
       class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
        <i class="fas fa-arrow-left mr-2"></i>Back to Bank List
    </a>
</div>

<!-- ======================================== -->
<!-- 2. ERROR DISPLAY (If any) -->
<!-- ======================================== -->
<?php if ($error): ?>
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded-r-lg" role="alert">
        <div class="flex">
            <div class="flex-shrink-0">
                <i class="fas fa-exclamation-circle text-red-500"></i>
            </div>
            <div class="ml-3">
                <p class="font-bold">Error</p>
                <p><?php echo htmlspecialchars($error); ?></p>
            </div>
        </div>
    </div>
<?php endif; ?>

<!-- ======================================== -->
<!-- 3. INFORMATIONAL BANNER -->
<!-- ======================================== -->
<?php if (!$edit_mode): ?>
<div class="bg-blue-50 border-l-4 border-blue-400 p-4 mb-6 rounded-r-lg">
    <div class="flex">
        <div class="flex-shrink-0">
            <i class="fas fa-info-circle text-blue-400"></i>
        </div>
        <div class="ml-3">
            <h3 class="text-sm font-medium text-blue-800">Accounting Integration</h3>
            <div class="mt-2 text-sm text-blue-700">
                <p>When you add a bank account with an opening balance:</p>
                <ul class="list-disc list-inside mt-1 space-y-1">
                    <li>A Chart of Accounts entry will be created automatically</li>
                    <li>A journal entry will record the opening balance using double-entry bookkeeping</li>
                    <li>The opening balance will be offset against "Opening Balance Equity"</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<?php endif; ?>

<!-- ======================================== -->
<!-- 4. ADD / EDIT BANK ACCOUNT FORM -->
<!-- ======================================== -->
<div class="bg-white rounded-lg shadow-md p-6">
    
    <form action="manage_bank_account.php" method="POST" class="space-y-6">
        
        <!-- Hidden fields -->
        <input type="hidden" name="<?php echo $form_action; ?>" value="1">
        <?php if ($edit_mode): ?>
            <input type="hidden" name="bank_uuid" value="<?php echo htmlspecialchars($account_to_edit->uuid); ?>">
        <?php endif; ?>

        <!-- Section 1: Bank Information -->
        <div>
            <h2 class="text-lg font-semibold text-gray-900 mb-4 pb-2 border-b border-gray-200">
                <i class="fas fa-university text-primary-600 mr-2"></i>Bank Information
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Bank Name -->
                <div>
                    <label for="bank_name" class="block text-sm font-medium text-gray-700 mb-1">
                        Bank Name <span class="text-red-500">*</span>
                    </label>
                    <input type="text" 
                           id="bank_name" 
                           name="bank_name" 
                           required
                           maxlength="255"
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                           value="<?php echo htmlspecialchars($account_to_edit->bank_name ?? ''); ?>"
                           placeholder="e.g., Dutch-Bangla Bank Limited">
                    <p class="mt-1 text-xs text-gray-500">Full legal name of the bank</p>
                </div>

                <!-- Branch Name -->
                <div>
                    <label for="branch_name" class="block text-sm font-medium text-gray-700 mb-1">
                        Branch Name <span class="text-red-500">*</span>
                    </label>
                    <input type="text" 
                           id="branch_name" 
                           name="branch_name" 
                           required
                           maxlength="255"
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                           value="<?php echo htmlspecialchars($account_to_edit->branch_name ?? ''); ?>"
                           placeholder="e.g., Demra Branch">
                    <p class="mt-1 text-xs text-gray-500">Branch where the account is held</p>
                </div>
            </div>

            <!-- Address -->
            <div class="mt-4">
                <label for="address" class="block text-sm font-medium text-gray-700 mb-1">
                    Bank Branch Address <span class="text-gray-400">(Optional)</span>
                </label>
                <textarea id="address" 
                          name="address"
                          rows="2"
                          maxlength="500"
                          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                          placeholder="e.g., N.R. Tower, Demra, Dhaka-1361"><?php echo htmlspecialchars($account_to_edit->address ?? ''); ?></textarea>
                <p class="mt-1 text-xs text-gray-500">Physical address of the bank branch</p>
            </div>
        </div>

        <!-- Section 2: Account Details -->
        <div>
            <h2 class="text-lg font-semibold text-gray-900 mb-4 pb-2 border-b border-gray-200">
                <i class="fas fa-file-invoice text-primary-600 mr-2"></i>Account Details
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Account Name -->
                <div>
                    <label for="account_name" class="block text-sm font-medium text-gray-700 mb-1">
                        Account Name <span class="text-red-500">*</span>
                    </label>
                    <input type="text" 
                           id="account_name" 
                           name="account_name" 
                           required
                           maxlength="255"
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                           value="<?php echo htmlspecialchars($account_to_edit->account_name ?? ''); ?>"
                           placeholder="e.g., Ujjwal Foundries Ltd.">
                    <p class="mt-1 text-xs text-gray-500">Name on the account (company name)</p>
                </div>

                <!-- Account Number -->
                <div>
                    <label for="account_number" class="block text-sm font-medium text-gray-700 mb-1">
                        Account Number <span class="text-red-500">*</span>
                    </label>
                    <input type="text" 
                           id="account_number" 
                           name="account_number" 
                           required
                           maxlength="100"
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                           value="<?php echo htmlspecialchars($account_to_edit->account_number ?? ''); ?>"
                           placeholder="e.g., 1081001234567">
                    <p class="mt-1 text-xs text-gray-500">Unique account number from the bank</p>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                <!-- Account Type -->
                <div>
                    <label for="account_type" class="block text-sm font-medium text-gray-700 mb-1">
                        Account Type <span class="text-red-500">*</span>
                    </label>
                    <select id="account_type" 
                            name="account_type" 
                            required 
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
                        <!-- SCHEMA FIX: Use exact ENUM values from schema -->
                        <option value="Checking" <?php echo ($account_to_edit->account_type ?? 'Checking') === 'Checking' ? 'selected' : ''; ?>>
                            Checking Account
                        </option>
                        <option value="Savings" <?php echo ($account_to_edit->account_type ?? '') === 'Savings' ? 'selected' : ''; ?>>
                            Savings Account
                        </option>
                        <option value="Loan" <?php echo ($account_to_edit->account_type ?? '') === 'Loan' ? 'selected' : ''; ?>>
                            Loan Account
                        </option>
                        <option value="Credit" <?php echo ($account_to_edit->account_type ?? '') === 'Credit' ? 'selected' : ''; ?>>
                            Credit Account
                        </option>
                        <option value="Other" <?php echo ($account_to_edit->account_type ?? '') === 'Other' ? 'selected' : ''; ?>>
                            Other
                        </option>
                    </select>
                    <p class="mt-1 text-xs text-gray-500">Type of bank account</p>
                </div>

                <!-- Initial Balance -->
                <div>
                    <label for="initial_balance" class="block text-sm font-medium text-gray-700 mb-1">
                        Initial Balance (৳)
                        <?php if (!$edit_mode): ?>
                            <span class="text-gray-400">(Optional)</span>
                        <?php endif; ?>
                    </label>
                    <input type="number" 
                           step="0.01" 
                           id="initial_balance" 
                           name="initial_balance"
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors <?php echo $edit_mode ? 'bg-gray-100' : ''; ?>"
                           value="<?php echo htmlspecialchars($account_to_edit->initial_balance ?? '0.00'); ?>"
                           placeholder="0.00"
                           <?php echo $edit_mode ? 'readonly' : ''; ?>>
                    
                    <?php if ($edit_mode): ?>
                        <p class="text-xs text-amber-600 mt-1 flex items-start">
                            <i class="fas fa-lock text-xs mr-1 mt-0.5"></i>
                            <span>Initial balance is locked after account creation. Use journal entries to adjust balances.</span>
                        </p>
                    <?php else: ?>
                        <p class="text-xs text-gray-500 mt-1">
                            Enter the current balance if migrating from another system. Leave as 0.00 for new accounts.
                        </p>
                    <?php endif; ?>
                </div>
            </div>
        </div>
        
        <!-- Submit Button -->
        <div class="pt-6 border-t border-gray-200 flex justify-end space-x-3">
            <a href="bank_accounts.php" 
               class="px-5 py-2.5 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500">
                <i class="fas fa-times mr-2"></i>Cancel
            </a>
            <button type="submit" 
                    class="px-5 py-2.5 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                <?php if ($edit_mode): ?>
                    <i class="fas fa-save mr-2"></i>Update Account
                <?php else: ?>
                    <i class="fas fa-plus mr-2"></i>Create Account
                <?php endif; ?>
            </button>
        </div>
    </form>
</div>

<!-- ======================================== -->
<!-- 5. HELP SECTION -->
<!-- ======================================== -->
<div class="mt-6 bg-gray-50 border border-gray-200 rounded-lg p-5">
    <h3 class="text-sm font-semibold text-gray-900 mb-3">
        <i class="fas fa-question-circle text-primary-600 mr-2"></i>Help & Guidelines
    </h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
        <div>
            <h4 class="font-medium text-gray-900 mb-1">Account Setup</h4>
            <ul class="space-y-1 text-gray-600">
                <li>• Use the full legal name of your bank</li>
                <li>• Enter the exact account number from your bank statement</li>
                <li>• Choose the correct account type for proper categorization</li>
            </ul>
        </div>
        <div>
            <h4 class="font-medium text-gray-900 mb-1">Initial Balance</h4>
            <ul class="space-y-1 text-gray-600">
                <li>• For new accounts, leave the initial balance as 0.00</li>
                <li>• When migrating, enter the current bank balance</li>
                <li>• Negative values are allowed for overdraft accounts</li>
            </ul>
        </div>
    </div>
</div>

<?php
// --- Include Footer ---
require_once '../templates/footer.php'; 
?>